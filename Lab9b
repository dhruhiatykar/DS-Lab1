#include <stdio.h>
#include <stdbool.h>

#define MAX 50

void dfs(int graph[MAX][MAX], bool visited[MAX], int node, int n) {
    visited[node] = true;
    // Visit all the adjacent nodes of the current node
    for (int i = 0; i < n; i++) {
        if (graph[node][i] == 1 && !visited[i]) {
            dfs(graph, visited, i, n);
        }
    }
}

bool isConnected(int graph[MAX][MAX], int n) {
    bool visited[MAX] = {false};
    
    // Start DFS from the first node (0th index)
    dfs(graph, visited, 0, n);

    // Check if all nodes are visited
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            return false;  // If any node is not visited, the graph is not connected
        }
    }
    return true;  // All nodes are visited, the graph is connected
}

int main() {
    int n;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    int graph[MAX][MAX];
    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    if (isConnected(graph, n)) {
        printf("The graph is connected.\n");
    } else {
        printf("The graph is not connected.\n");
    }

    return 0;
}
