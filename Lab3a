#include <stdio.h>
#include <stdlib.h>

#define MAX 5

typedef struct {
    int arr[MAX];
    int front, rear;
} Queue;

void initializeQueue(Queue* queue) {
    queue->front = -1;
    queue->rear = -1;
}

int isFull(Queue* queue) {
    return queue->rear == MAX - 1;
}

int isEmpty(Queue* queue) {
    return queue->front == -1 || queue->front > queue->rear;
}

void insert(Queue* queue, int value) {
    if (isFull(queue)) {
        printf("Queue Overflow! Unable to insert %d\n", value);
    } else {
        if (queue->front == -1) queue->front = 0;
        queue->arr[++queue->rear] = value;
        printf("Inserted %d into the queue.\n", value);
    }
}

int delete(Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue Underflow! No element to delete.\n");
        return -1;
    } else {
        int deletedValue = queue->arr[queue->front++];
        if (queue->front > queue->rear) {
            queue->front = queue->rear = -1;
        }
        return deletedValue;
    }
}

void display(Queue* queue) {
    if (isEmpty(queue)) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements: ");
        for (int i = queue->front; i <= queue->rear; i++) {
            printf("%d ", queue->arr[i]);
        }
        printf("\n");
    }
}

int main() {
    Queue queue;
    int choice, value;
    initializeQueue(&queue);

    while (1) {
        printf("\n1. Insert\n2. Delete\n3. Display\n4. Exit\nEnter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                insert(&queue, value);
                break;
            case 2:
                value = delete(&queue);
                if (value != -1) {
                    printf("Deleted %d from the queue.\n", value);
                }
                break;
            case 3:
                display(&queue);
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
    return 0;
}
